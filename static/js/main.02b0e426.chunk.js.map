{"version":3,"sources":["Filter.jsx","Navbar.jsx","Search.jsx","Pagination.jsx","Table.jsx","Login.jsx","Customer.jsx","Rentals.jsx","App.js","index.js"],"names":["Filter","props","class","onClick","handleFilter","selectedFilter","genreData","map","el","name","_id","Navbar","href","type","id","to","Search","total","placeholder","value","onChange","e","updateSearch","currentTarget","Pagination","arr","i","numberOfPages","push","selectPage","currPage","Table","state","setState","allMovies","this","moviesData","currFilter","filteredMoviesArr","filter","genre","movieTitle","title","toLowerCase","s","search","includes","Math","ceil","length","startIndex","endIndex","min","arrToBeUsedInTable","slice","scope","numberInStock","dailyRentalRate","toggleLike","liked","deleteMovie","className","React","Component","Login","Customer","Rentals","App","movies","searchString","setFilter","index","findIndex","currMoviesArr","filteredArr","f","a","fetch","responseGenre","responseMovies","json","moviesJson","genreJson","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.02b0e426.chunk.js","sourcesContent":["let Filter = (props) => {\r\n    return (\r\n      <div class=\"col-3\">\r\n        <ul class=\"list-group m-4\">\r\n          <li\r\n            onClick={() => {\r\n              props.handleFilter(\"All Genre\");\r\n            }}\r\n            class={`list-group-item ${\r\n              props.selectedFilter == \"All Genre\" ? \"active\" : \"\"\r\n            }`}\r\n          >\r\n            All Genre\r\n          </li>\r\n          {props.genreData.map((el) => {\r\n            return (\r\n              <li\r\n                onClick={() => {\r\n                  props.handleFilter(el.name);\r\n                }}\r\n                key={el._id}\r\n                class={`list-group-item ${\r\n                  props.selectedFilter == el.name ? \"active\" : \"\"\r\n                }`}\r\n              >\r\n                {el.name}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default Filter;","import { Link } from \"react-router-dom\";\r\nlet Navbar =()=> {\r\n    return (\r\n        <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div class=\"container-fluid\">\r\n          <a class=\"navbar-brand\" href=\"#\">MoviesRentals</a>\r\n          <button\r\n            class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarNav\"\r\n            aria-controls=\"navbarNav\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul class=\"navbar-nav\">\r\n              <li class=\"nav-item\">\r\n                <Link class=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <Link class=\"nav-link\" to=\"/customer\">Customers</Link>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <Link class=\"nav-link\" to=\"/rentals\">Rentals</Link>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <Link class=\"nav-link\" to=\"/login\">Login</Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n}\r\nexport default Navbar;","let Search =(props)=> {\r\n    return ( \r\n        <>\r\n        <p class=\"mt-4\">Showing {props.total} movies from the database</p>\r\n          <button type=\"button\" class=\"btn btn-primary mt-2\">New</button>\r\n  \r\n          <div class=\"row\">\r\n            <div class=\"col-4\">\r\n              <div class=\"input-group flex-nowrap\">\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control mt-4\"\r\n                  placeholder=\"Search...\"\r\n                  value={props.Search}\r\n                  onChange={ (e)=> {\r\n                    props.updateSearch(e.currentTarget.value);\r\n                  } }\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          </>\r\n    );\r\n}\r\nexport default Search;","let Pagination = (props) => {\r\n  let arr = [];\r\n  for (let i = 1; i <= props.numberOfPages; i++) {\r\n    arr.push(i);\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <ul class=\"pagination mt-4\">\r\n        {arr.map((el) => {\r\n          return (\r\n            <li\r\n              onClick={() => {\r\n                props.selectPage(el);\r\n              }}\r\n              class={`page-item ${props.currPage === el ? \"active\" : \"\"}`}\r\n            >\r\n              <a class=\"page-link\">{el}</a>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;","import Pagination from \"./Pagination\";\r\nimport React from \"react\";\r\nimport \"./Table.css\";\r\n\r\nclass Table extends React.Component {\r\n  state = {\r\n    currPage: 1,\r\n  };\r\n\r\n  selectPage = (value) => {\r\n    this.setState({ currPage: value });\r\n  };\r\n\r\n  render() {\r\n    let allMovies = this.props.moviesData;\r\n    let currFilter = this.props.selectedFilter;\r\n\r\n    let filteredMoviesArr = allMovies.filter((el) => {\r\n      if (currFilter === \"All Genre\") {\r\n        return true;\r\n      } else if (el.genre.name === currFilter) {\r\n        return true;\r\n      }\r\n    });\r\n\r\n    filteredMoviesArr = filteredMoviesArr.filter((el) => {\r\n      let movieTitle = el.title;\r\n      movieTitle = movieTitle.toLowerCase();\r\n      let s = this.props.search.toLowerCase();\r\n      return movieTitle.includes(s);\r\n    });\r\n\r\n    let numberOfPages = Math.ceil(filteredMoviesArr.length / 4);\r\n\r\n    let startIndex = (this.state.currPage - 1) * 4;\r\n    let endIndex = Math.min(filteredMoviesArr.length, this.state.currPage * 4);\r\n\r\n    let arrToBeUsedInTable = filteredMoviesArr.slice(startIndex, endIndex);\r\n\r\n    return (\r\n      <>\r\n        <div class=\"row\">\r\n          <div class=\"col-10\">\r\n            <table class=\"table mt-4\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Title</th>\r\n                  <th scope=\"col\">Genre</th>\r\n                  <th scope=\"col\">Stock</th>\r\n                  <th scope=\"col\">Rate</th>\r\n                  <th scope=\"col\"></th>\r\n                  <th scope=\"col\"></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {arrToBeUsedInTable.map((el) => {\r\n                  return (\r\n                    <tr key={el._id}>\r\n                      <td>{el.title}</td>\r\n                      <td>{el.genre.name}</td>\r\n                      <td>{el.numberInStock}</td>\r\n                      <td>{el.dailyRentalRate}</td>\r\n                      <td\r\n                        onClick={() => {\r\n                          this.props.toggleLike(el._id);\r\n                        }}\r\n                      >\r\n                        {el.liked ? (\r\n                          <span class=\"material-icons-outlined\">favorite</span>\r\n                        ) : (\r\n                          <span class=\"material-icons-outlined\">\r\n                            favorite_border\r\n                          </span>\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        <button\r\n                          onClick={() => {\r\n                            this.props.deleteMovie(el._id);\r\n                          }}\r\n                          className=\"table-delete-btn\"\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <Pagination\r\n          selectPage={this.selectPage}\r\n          currPage={this.state.currPage}\r\n          numberOfPages={numberOfPages}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;","let Login = () => {\r\n    return <h1>Login</h1>;\r\n  };\r\n  \r\n  export default Login;\r\n  ","let Customer = () => {\r\n    return <h1>Customer</h1>;\r\n  };\r\n  \r\n  export default Customer;\r\n  ","let Rentals = () => {\r\n    return <h1>Rentals</h1>;\r\n  };\r\n  \r\n  export default Rentals;\r\n  ","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Filter from \"./Filter\";\nimport Navbar from \"./Navbar\";\nimport Search from \"./Search\";\nimport Table from \"./Table\";\nimport Login from \"./Login\";\nimport Customer from \"./Customer\";\nimport Rentals from \"./Rentals\";\n\nclass App extends React.Component {\n  state = {\n    movies: [],\n    genre: [],\n    selectedFilter: \"All Genre\",\n    search: \"\",\n  };\n\n  updateSearch = (searchString) => {\n    this.setState({ search: searchString });\n  };\n\n  setFilter = (filter) => {\n    this.setState({ selectedFilter: filter });\n  };\n\n  toggleLike = (id) => {\n    let index = this.state.movies.findIndex((el) => {\n      return el._id === id;\n    });\n\n    let currMoviesArr = this.state.movies.map((el) => el);\n\n    if (currMoviesArr[index].liked) {\n      currMoviesArr[index].liked = false;\n    } else {\n      currMoviesArr[index].liked = true;\n    }\n\n    this.setState({ movies: currMoviesArr });\n  };\n\n  deleteMovie = (id) => {\n    let filteredArr = this.state.movies.filter((el) => {\n      return el._id !== id;\n    });\n\n    this.setState({ movies: filteredArr });\n  };\n\n  componentDidMount() {\n    let f = async () => {\n      let responseGenre = await fetch(\"http://localhost:4000/genre\");\n      let responseMovies = await fetch(\"http://localhost:4000/movies\");\n      let moviesJson = await responseMovies.json();\n      let genreJson = await responseGenre.json();\n\n      this.setState({\n        movies: moviesJson,\n        genre: genreJson,\n      });\n    };\n\n    f();\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Navbar />\n\n          <Switch>\n            <Route exact path=\"/rentals/premium\">\n              <Login />\n            </Route>\n            <Route exact path=\"/rentals\">\n              <Rentals />\n            </Route>\n\n            <Route path=\"/customer\">\n              <Customer />\n            </Route>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n            <Route path=\"/\">\n              <div className=\"row\">\n                <Filter\n                  handleFilter={this.setFilter}\n                  selectedFilter={this.state.selectedFilter}\n                  genreData={this.state.genre}\n                />\n\n                <div className=\"col-9 p-4\">\n                  <Search\n                    search={this.state.search}\n                    updateSearch={this.updateSearch}\n                    total={this.state.movies.length}\n                  />\n                  <Table\n                    search={this.state.search}\n                    deleteMovie={this.deleteMovie}\n                    toggleLike={this.toggleLike}\n                    selectedFilter={this.state.selectedFilter}\n                    moviesData={this.state.movies}\n                  />\n                </div>\n              </div>\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}